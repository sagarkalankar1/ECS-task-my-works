name: push node image to ECS

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Image tag to use'
        default: 'Image tag'
        required: true
      environment:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1      

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
      with:
        task-definition: ${{ VARS.ECS_TASK_DEFINITION }}
        container-name: ${{ VARS.CONTAINER_NAME }}
        image: ${{ secrets.ECR_IMAGE_URI }}
 
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ VARS.ECS_SERVICE }}
        cluster: ${{ VARS.ECS_CLUSTER }}
        wait-for-service-stability: true

    - name: Update ECS Service Count
      run: |
        aws ecs update-service --cluster sag-ECS-cluster --service sag-ecs-service --desired-count 0 --task-definition arn:aws:ecs:ap-south-1:927689643452:task-definition/mynodeapp-new:15
# okkkk
    
